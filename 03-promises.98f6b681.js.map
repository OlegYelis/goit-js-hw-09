{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAEzCI,EAAaC,OAAOJ,EAAaK,OAASD,OAAOH,EAAYI,OAEjE,SAASC,EAAcC,EAAUC,GAC/B,OAAQC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACtC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEJ,WAAUC,UAEtBI,EAAO,CAAEL,WAAUC,YAClBL,MAIP,IAAMc,EAAgB,WACpB,IAAK,IAAIC,EAAI,EAAGA,EAAId,OAAOF,EAAcG,OAAQa,GAAK,EACpDZ,EAAcY,EAAI,EAAIf,GAAcC,OAAOH,EAAYI,QACpDc,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBb,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,UAE9DgB,OAAM,SAAAJ,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBb,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,WAKlEX,EAAO6B,iBAAiB,UAAU,SAAAC,GAChCA,EAAIC,iBAEJZ,WAAWC,EAAeb,OAAOJ,EAAaK,QAE9CF,EAAaC,OAAOJ,EAAaK,OAASD,OAAOH,EAAYI,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nlet totalDelay = Number(inputDelayEl.value) - Number(inputStepEl.value);\n\nfunction createPromise(position, delay) {\n  return (promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, totalDelay);\n  }));\n}\n\nconst totalPromises = () => {\n  for (let i = 0; i < Number(inputAmountEl.value); i += 1) {\n    createPromise(i + 1, (totalDelay += Number(inputStepEl.value)))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nformEl.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  setTimeout(totalPromises, Number(inputDelayEl.value));\n\n  totalDelay = Number(inputDelayEl.value) - Number(inputStepEl.value);\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$totalDelay","Number","value","$ce04d3a99e08e73b$var$createPromise","position","delay","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$totalPromises","i","then","param","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault"],"version":3,"file":"03-promises.98f6b681.js.map"}